################################
# 本文件作为模板文件，请复制出 docker-compose.yaml 文件后再根据本地实际开发环境修改.
# 不要将个人开发环境的配置，写入到本文件中!
################################
#
x-shared-env: &shared-api-worker-env
  LOG_LEVEL: INFO
  LAZY_PLATFORM_KEY: sk-IrD318oX/wz8bt4Ns37OtiMEzBjvS7Ylf9ZlkFrn59XAQUyzKBs3TUnR
  WEB_CONSOLE_ENDPOINT: 'http://10.210.0.49:5022/' #更新为平台登录的ip+port
  MIGRATION_ENABLED: 'true'
  RESET_PASSWORD_TOKEN_EXPIRY_HOURS: 24 # 重置密码过期时间

  # tidb
  DB_USERNAME: root
  DB_PASSWORD: ''
  DB_HOST: db
  DB_PORT: 4000
  DB_DATABASE: lazyplatform
  # redis
  REDIS_HOST: redis
  REDIS_PORT: 6379
  REDIS_USERNAME: ''
  REDIS_PASSWORD: lazyai123456
  REDIS_USE_SSL: 'false'
  REDIS_DB: 0
  CELERY_BROKER_URL: redis://:lazyai123456@redis:6379/1
  # 存储
  STORAGE_TYPE: local
  STORAGE_LOCAL_PATH: storage # 也可设置为绝对路径
  # 邮件
  MAIL_TYPE: '' # 设置为smtp表示开启发邮件功能
  MAIL_DEFAULT_SEND_FROM: 'no-reply <no-reply@extremeviison.com.cn>'
  SMTP_SERVER: 'smtp.qiye.aliyun.com'
  SMTP_PORT: 465
  SMTP_USERNAME: ''
  SMTP_PASSWORD: 'DZQTNjreqIRnFR9L'
  SMTP_USE_TLS: 'true'
  SMS_URL: http://10.119.27.241:26511/send
  # SCO
  GITHUB_CLIENT_ID: Ov23liJkLV9ZOselkX1t
  GITHUB_CLIENT_SECRET: a62a44dc92ed6b44ffa0709bd7e297d60a82b835
  LAZYLLM_CUDA_VISIBLE: 'True'
  LAZYLLM_MODEL_SOURCE_TOKEN: '49a99425-bbc9-40a0-8a3b-678d0b834202'
  LAZYLLM_DEFAULT_LAUNCHER: sco
  LAZYLLM_SCO_RESOURCE_TYPE: N3lS.Ii.I60
  LAZYLLM_SLURM_PART: a800
  LAZYLLM_SCO_WORKSPACE: expert-services
  LAZYLLM_SENSENOVA_API_KEY: 7ACAC0FD3DE345DDB2A19C39F60C0F34
  LAZYLLM_SENSENOVA_SECRET_KEY: 2B0F7230F6D14E1EB223DAA50B5BF715
  SCC_ZONE: cn-sh-01a
  SCC_ENV: cn
  SCC_CONTAINER_MOUNTS: b41e67b5-6e82-11ef-bd34-b6137b970450:/home/mnt,ce847c75-6e82-11ef-bd34-b6137b970450:/mnt/lustre/share_data
  SCC_IMAGE: registry.cn-sh-01.sensecore.cn/ai-expert-service/lazyplatform:dev-202504272010
  # mcp chart工具的配置，因图片需要在外部访问，MINIO_PROXY是需要在图片URL中加的前缀。
  NODE_ENV: production
  MINIO_ENDPOINT: 10.119.23.41
  MINIO_PORT: 32900
  MINIO_USE_SSL: false
  MINIO_ACCESS_KEY: kGhdrqvg4ZwXgkuJwE5e
  MINIO_SECRET_KEY: ssHcKk2WZwYn83tx89DANAQltcnmkrmSQp8aWnc1
  MINIO_BUCKET_NAME: mcp-echarts
  MINIO_PROXY: http://10.210.0.49:32900
  
services:
  ## API service
  api:
    image: registry.cn-sh-01.sensecore.cn/ai-expert-service/lazyplatform-back:dev_maas_app-34ed6bd
    restart: always
    security_opt:
      - seccomp:unconfined
    environment:
      # Use the shared environment variables.
      !!merge <<: *shared-api-worker-env
      # Startup mode, 'api' starts the API server.
      MODE: api
      DEBUG: 'true' # 开启开发模式,代码保存后会自动重启
      TZ: Asia/Shanghai
      HOME: ${HOME}/lazyplatform
      LAZYLLM_TEMP_DIR: ${HOME}/lazyplatform/temp
      LAZYLLM_INFER_LOG_ROOT: ${HOME}/lazyplatform/logs/infer
      LAZYLLM_TRAIN_TARGET_ROOT: ${HOME}/lazyplatform/finetune_models
      LAZYLLM_CUDA_VISIBLE: "True" ##重复变量
    depends_on:
      - db
      - redis
    networks:
      - lazyplatform-network
    volumes:
      - ./volumes/app/storage:/app/storage
      - ./volumes/app/upload:/app/upload #和nginx共享， valumes主要存放数据
      - /mnt/lustre/share_data:/mnt/lustre/share_data # 模型、数据集存储卷
      - ${HOME}/lazyplatform:${HOME}/lazyplatform # lazyllm目录
      - ../src:/app/src # 挂载代码
  ## worker service. The Celery worker for processing the queue.
  worker:
    image: registry.cn-sh-01.sensecore.cn/ai-expert-service/lazyplatform-back:dev_maas_app-34ed6bd
    restart: always
    security_opt:
      - seccomp:unconfined
    environment:
      # Use the shared environment variables.
      !!merge <<: *shared-api-worker-env
      # Startup mode, 'worker' starts the Celery worker for processing the queue.
      MODE: worker
      TZ: Asia/Shanghai
      HOME: ${HOME}/lazyplatform
      LAZYLLM_TEMP_DIR: ${HOME}/lazyplatform/temp
      LAZYLLM_INFER_LOG_ROOT: ${HOME}/lazyplatform/logs/infer
      LAZYLLM_TRAIN_TARGET_ROOT: ${HOME}/lazyplatform/finetune_models
      LAZYLLM_CUDA_VISIBLE: "True"
    depends_on:
      - db
      - redis
    networks:
      - lazyplatform-network
    volumes:
      - ./volumes/app/storage:/app/storage
      - ./volumes/app/upload:/app/upload #和nginx共享， valumes主要存放数据
      - /mnt/lustre/share_data:/mnt/lustre/share_data # 模型、数据集存储卷
      - ${HOME}/lazyplatform:${HOME}/lazyplatform # lazyllm目录
      - ../src:/app/src # 挂载代码
  ## beat service
  beat:
    image: registry.cn-sh-01.sensecore.cn/ai-expert-service/lazyplatform-back:dev_maas_app-34ed6bd
    restart: always
    security_opt:
      - seccomp:unconfined
    environment:
      # Use the shared environment variables.
      !!merge <<: *shared-api-worker-env
      # Startup mode, 'worker' starts the Celery worker for processing the queue.
      MODE: beat
      TZ: Asia/Shanghai
      HOME: ${HOME}/lazyplatform
      LAZYLLM_CUDA_VISIBLE: "True"
    depends_on:
      - db
      - redis
    networks:
      - lazyplatform-network
    volumes:
      - ./volumes/app/storage:/app/storage
      - ./volumes/app/upload:/app/upload #和nginx共享， valumes主要存放数据
      - /mnt/lustre/share_data:/mnt/lustre/share_data # 模型、数据集存储卷
      - ${HOME}/lazyplatform:${HOME}/lazyplatform # lazyllm目录
      - ../src:/app/src # 挂载代码
      
  ## Frontend web application.
  web:
    image: registry.cn-sh-01.sensecore.cn/ai-expert-service/lazyplatform-front:test-538e704e
    restart: always
    environment:
      CORE_API_ENDPOINT: ''
      APP_API_ENDPOINT: ''
      SENTRY_DSN: ''
    networks:
      - lazyplatform-network
  pd:
    image: registry.cn-sh-01.sensecore.cn/ai-expert-service/pingcap/pd:v8.5.0
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    privileged: true
    # ports:
    #   - "2379:2379"
    #   - "2380:2380"
    environment:
      - PD_SERVER_NAME=pd
      - INITIAL_CLUSTER=pd=http://pd:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
    volumes:
      - ./volumes/pd-data:/pd
    networks:
      - lazyplatform-network
  tikv:
    image: registry.cn-sh-01.sensecore.cn/ai-expert-service/pingcap/tikv:v8.5.0
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    privileged: true
    # ports:
    #   - "20160:20160"
    environment:
      - PD_ADDR=pd:2379
    depends_on:
      - pd
    volumes:
      - ./volumes/tikv-data:/tikv
    networks:
      - lazyplatform-network
  db:
    image: registry.cn-sh-01.sensecore.cn/ai-expert-service/pingcap/tidb:v8.5.0
    cap_add:
      - SYS_ADMIN
    security_opt:
      - seccomp:unconfined
    privileged: true
    # ports:
    #   - "4000:4000"
    environment:
      - PATH="bin:$PATH"
      - MYSQL_HOST=0.0.0.0
      - MYSQL_PORT=4000
      - STORE=tikv
      - PATH=bin:$PATH
      - PD_ADDR=pd:2379
    depends_on:
      - tikv
      - pd
    volumes:
      - ./volumes/tidb-data:/tmp/tidb
    networks:
      - lazyplatform-network
  redis:
    image: registry.cn-sh-01.sensecore.cn/lazy_platform/redis:6-alpine
    restart: always
    volumes:
      - ./volumes/redis/data:/data
    # Set the redis password when startup redis server.
    command: redis-server --requirepass lazyai123456
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    networks:
      - lazyplatform-network
    # ports:
    #   - "6379:6379"

  minio:
    image: 'docker.1ms.run/bitnami/minio:2025.4.8'
    restart: always
    # ports:
    #   - '9000:9000'
    #   - '9001:9001'
    environment:
      - MINIO_ROOT_USER=minio-root-trc
      - MINIO_ROOT_PASSWORD=minio-root-trc
    volumes:
      - ./volumes/minio/data:/data
      - ./volumes/minio/config:/root/.minio
    networks:
      lazyplatform-network:
        aliases:
          - minio-svc.minio

  nginx:
    image: registry.cn-sh-01.sensecore.cn/ai-expert-service/lazyplatform-nginx:dev-8f7acc45
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      # - ./nginx/certs/sensetime.com.crt:/etc/nginx/certs/sensetime.com.crt
      # - ./nginx/certs/sensetime.com.key:/etc/nginx/certs/sensetime.com.key
      - ./volumes/app/upload:/app/upload # 静态文件目录，部署脚本一定要放在数据盘，和后端共享
    depends_on:
      - api
      - web
      - minio
    networks:
      - lazyplatform-network
    ports:
      - "${PORT:-30382}:80"
  mcp-echarts-sse:
    image: registry.cn-sh-01.sensecore.cn/ai-expert-service/mcp-echarts-mcp-echarts-sse:latest
    restart: always
    command: ["node", "build/index.js", "--transport", "sse", "--port", "3033"]
    networks:
      - lazyplatform-network
    environment:
      # Use the shared environment variables.
      !!merge <<: *shared-api-worker-env
  web-search-sse: # 提供网络搜索的sse服务
    image: registry.cn-sh-01.sensecore.cn/ai-expert-service/open-web-search:latest
    working_dir: /app
    restart: always
    networks:
      - lazyplatform-network
    environment:
      NODE_ENV: production
      ENABLE_CORS: "true"
      CORS_ORIGIN: "*"
    command: ["node", "build/index.js"]
networks:
  lazyplatform-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: "1400"
